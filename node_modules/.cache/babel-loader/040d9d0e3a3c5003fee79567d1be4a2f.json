{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/developer/Documents/Bhavani/All-Demos/interview-tasks/srinidhi-tech-task/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { fetchUsers } from \"./Store/actions/fetchUserActions\";\nimport { fetchUserName } from \"./Store/actions/singleUserActions\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChangeHandler = e => {\n      console.log(e.target.value);\n      this.props.dispatch(fetchUserName(e.target.value));\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchUsers());\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: this.onChangeHandler,\n        children: [this.props.loading && /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 34\n        }, this), this.props.users.map((i, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i.name,\n            children: i.name\n          }, i.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.allUsers.users,\n    loading: state.allUsers.loading,\n    error: state.allUsers.error\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/home/developer/Documents/Bhavani/All-Demos/interview-tasks/srinidhi-tech-task/src/App.js"],"names":["React","Component","fetchUsers","fetchUserName","connect","App","onChangeHandler","e","console","log","target","value","props","dispatch","componentDidMount","render","loading","users","map","i","index","name","id","mapStateToProps","state","allUsers","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAK1BK,eAL0B,GAKRC,CAAC,IAAI;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAoBV,aAAa,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAjC;AACD,KARyB;AAAA;;AAC1BG,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,KAAL,CAAWC,QAAX,CAAoBX,UAAU,EAA9B;AACD;;AAODa,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,KAAKT,eAAvB;AAAA,mBACG,KAAKM,KAAL,CAAWI,OAAX,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADzB,EAEG,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAClC,8BACE;AAAmB,YAAA,KAAK,EAAED,CAAC,CAACE,IAA5B;AAAA,sBACGF,CAAC,CAACE;AADL,aAAaF,CAAC,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAzByB;;AA4B5B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLP,IAAAA,KAAK,EAAEO,KAAK,CAACC,QAAN,CAAeR,KADjB;AAELD,IAAAA,OAAO,EAAEQ,KAAK,CAACC,QAAN,CAAeT,OAFnB;AAGLU,IAAAA,KAAK,EAAEF,KAAK,CAACC,QAAN,CAAeC;AAHjB,GAAP;AAKD,CAND;;AAQA,eAAetB,OAAO,CAACmB,eAAD,CAAP,CAAyBlB,GAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { fetchUsers } from \"./Store/actions/fetchUserActions\";\nimport { fetchUserName } from \"./Store/actions/singleUserActions\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(fetchUsers());\n  }\n\n  onChangeHandler = e => {\n    console.log(e.target.value);\n    this.props.dispatch(fetchUserName(e.target.value));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <select onChange={this.onChangeHandler}>\n          {this.props.loading && <option>Loading</option>}\n          {this.props.users.map((i, index) => {\n            return (\n              <option key={i.id} value={i.name}>\n                {i.name}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.allUsers.users,\n    loading: state.allUsers.loading,\n    error: state.allUsers.error\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}