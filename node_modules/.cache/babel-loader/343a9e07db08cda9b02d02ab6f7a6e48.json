{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/developer/Documents/Bhavani/All-Demos/interview-tasks/srinidhi-tech-task/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { fetchUsers } from \"./Store/actions/fetchUserActions\";\nimport { fetchSingleUser } from \"./Store/actions/singleUserActions\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: false\n    };\n\n    this.onChangeHandler = event => {\n      const select = event.target;\n      const id = select.children[select.selectedIndex].id;\n      console.log(id);\n      this.props.dispatch(fetchSingleUser(id));\n      this.setState({\n        selected: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchUsers());\n  }\n\n  render() {\n    const {\n      users,\n      loading\n    } = this.props.allUsers;\n    const {\n      userdata,\n      isLoading\n    } = this.props.singleUserData;\n    console.log(\"props \", this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: this.onChangeHandler,\n        children: [loading && /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 23\n        }, this), users.map(i => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            id: i.id,\n            value: i.name,\n            children: i.name\n          }, i.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), this.state.selected ? \"not selected\" : \"selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    // users: state.allUsers.users,\n    // loading: state.allUsers.loading,\n    // error: state.allUsers.error,\n    allUsers: state.allUsers,\n    singleUserData: state.fetchSingleUser\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/home/developer/Documents/Bhavani/All-Demos/interview-tasks/srinidhi-tech-task/src/App.js"],"names":["React","Component","fetchUsers","fetchSingleUser","connect","App","state","selected","onChangeHandler","event","select","target","id","children","selectedIndex","console","log","props","dispatch","setState","componentDidMount","render","users","loading","allUsers","userdata","isLoading","singleUserData","map","i","name","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADkB;;AAAA,SAS1BC,eAT0B,GASRC,KAAK,IAAI;AACzB,YAAMC,MAAM,GAAGD,KAAK,CAACE,MAArB;AACA,YAAMC,EAAE,GAAGF,MAAM,CAACG,QAAP,CAAgBH,MAAM,CAACI,aAAvB,EAAsCF,EAAjD;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACA,WAAKK,KAAL,CAAWC,QAAX,CAAoBf,eAAe,CAACS,EAAD,CAAnC;AACA,WAAKO,QAAL,CAAc;AAAEZ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAfyB;AAAA;;AAK1Ba,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWC,QAAX,CAAoBhB,UAAU,EAA9B;AACD;;AAUDmB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqB,KAAKN,KAAL,CAAWO,QAAtC;AACA,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0B,KAAKT,KAAL,CAAWU,cAA3C;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKC,KAA3B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,QAAQ,EAAE,KAAKT,eAAvB;AAAA,mBACGe,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADd,EAEGD,KAAK,CAACM,GAAN,CAAUC,CAAC,IAAI;AACd,8BACE;AAAQ,YAAA,EAAE,EAAEA,CAAC,CAACjB,EAAd;AAA6B,YAAA,KAAK,EAAEiB,CAAC,CAACC,IAAtC;AAAA,sBACGD,CAAC,CAACC;AADL,aAAuBD,CAAC,CAACjB,EAAzB;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAWG,KAAKN,KAAL,CAAWC,QAAX,GAAsB,cAAtB,GAAuC,UAX1C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AApCyB;;AAuC5B,MAAMwB,eAAe,GAAGzB,KAAK,IAAI;AAC/B,SAAO;AACL;AACA;AACA;AACAkB,IAAAA,QAAQ,EAAElB,KAAK,CAACkB,QAJX;AAKLG,IAAAA,cAAc,EAAErB,KAAK,CAACH;AALjB,GAAP;AAOD,CARD;;AAUA,eAAeC,OAAO,CAAC2B,eAAD,CAAP,CAAyB1B,GAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { fetchUsers } from \"./Store/actions/fetchUserActions\";\nimport { fetchSingleUser } from \"./Store/actions/singleUserActions\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  state = {\n    selected: false\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchUsers());\n  }\n\n  onChangeHandler = event => {\n    const select = event.target;\n    const id = select.children[select.selectedIndex].id;\n    console.log(id);\n    this.props.dispatch(fetchSingleUser(id));\n    this.setState({ selected: true });\n  };\n\n  render() {\n    const { users, loading } = this.props.allUsers;\n    const { userdata, isLoading } = this.props.singleUserData;\n    console.log(\"props \", this.props);\n    return (\n      <div className=\"App\">\n        <select onChange={this.onChangeHandler}>\n          {loading && <option>Loading</option>}\n          {users.map(i => {\n            return (\n              <option id={i.id} key={i.id} value={i.name}>\n                {i.name}\n              </option>\n            );\n          })}\n        </select>\n        {this.state.selected ? \"not selected\" : \"selected\"}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    // users: state.allUsers.users,\n    // loading: state.allUsers.loading,\n    // error: state.allUsers.error,\n    allUsers: state.allUsers,\n    singleUserData: state.fetchSingleUser\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}