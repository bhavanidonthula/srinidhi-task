{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/developer/Documents/Bhavani/All-Demos/interview-tasks/srinidhi-tech-task/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { fetchUsers } from \"./Store/actions/fetchUserActions\";\nimport { fetchUserName } from \"./Store/actions/singleUserActions\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChangeHandler = e => {\n      console.log(e.target);\n      console.log(e[e.selectedIndex].id);\n      this.props.dispatch(fetchUserName(e.target.value));\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchUsers());\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: this.onChangeHandler,\n        children: [this.props.loading && /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 34\n        }, this), this.props.users.map((i, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            id: i.id,\n            value: i.name,\n            children: i.name\n          }, i.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.allUsers.users,\n    loading: state.allUsers.loading,\n    error: state.allUsers.error\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/home/developer/Documents/Bhavani/All-Demos/interview-tasks/srinidhi-tech-task/src/App.js"],"names":["React","Component","fetchUsers","fetchUserName","connect","App","onChangeHandler","e","console","log","target","selectedIndex","id","props","dispatch","value","componentDidMount","render","loading","users","map","i","index","name","mapStateToProps","state","allUsers","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAK1BK,eAL0B,GAKRC,CAAC,IAAI;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACA,CAAC,CAACI,aAAH,CAAD,CAAmBC,EAA/B;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAoBX,aAAa,CAACI,CAAC,CAACG,MAAF,CAASK,KAAV,CAAjC;AACD,KATyB;AAAA;;AAC1BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWC,QAAX,CAAoBZ,UAAU,EAA9B;AACD;;AAQDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,KAAKX,eAAvB;AAAA,mBACG,KAAKO,KAAL,CAAWK,OAAX,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADzB,EAEG,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAClC,8BACE;AAAQ,YAAA,EAAE,EAAED,CAAC,CAACT,EAAd;AAA6B,YAAA,KAAK,EAAES,CAAC,CAACE,IAAtC;AAAA,sBACGF,CAAC,CAACE;AADL,aAAuBF,CAAC,CAACT,EAAzB;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA1ByB;;AA6B5B,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLN,IAAAA,KAAK,EAAEM,KAAK,CAACC,QAAN,CAAeP,KADjB;AAELD,IAAAA,OAAO,EAAEO,KAAK,CAACC,QAAN,CAAeR,OAFnB;AAGLS,IAAAA,KAAK,EAAEF,KAAK,CAACC,QAAN,CAAeC;AAHjB,GAAP;AAKD,CAND;;AAQA,eAAevB,OAAO,CAACoB,eAAD,CAAP,CAAyBnB,GAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { fetchUsers } from \"./Store/actions/fetchUserActions\";\nimport { fetchUserName } from \"./Store/actions/singleUserActions\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(fetchUsers());\n  }\n\n  onChangeHandler = e => {\n    console.log(e.target);\n    console.log(e[e.selectedIndex].id);\n    this.props.dispatch(fetchUserName(e.target.value));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <select onChange={this.onChangeHandler}>\n          {this.props.loading && <option>Loading</option>}\n          {this.props.users.map((i, index) => {\n            return (\n              <option id={i.id} key={i.id} value={i.name}>\n                {i.name}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.allUsers.users,\n    loading: state.allUsers.loading,\n    error: state.allUsers.error\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}